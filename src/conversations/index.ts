import { InlineKeyboard, type Context } from "grammy";
import { type Conversation } from "@grammyjs/conversations";

export const start = async (conversation: Conversation, ctx: Context) => {
  await ctx.reply(
    "üéâ –¢—ã –≤ –±–æ—Ç–µ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞\n<b>¬´–≠–ª—å–≤–∏—Ä–∞ | WB CLUB | –ê–ª—å–±–∏–Ω–∞¬ª</b>\n\n–ß—É—Ç—å-—á—É—Ç—å –æ –Ω–∞—Å, –µ—Å–ª–∏ —Ç—ã –µ—â—ë –Ω–µ –≤ –∫—É—Ä—Å–µ, –∫—É–¥–∞ –ø–æ–ø–∞–ª(–∞):\n\nüëã –ü—Ä–∏–≤–µ—Ç! –ú—ã ‚Äî –≠–ª—å–≤–∏—Ä–∞ –∏ –ê–ª—å–±–∏–Ω–∞.\n–£–∂–µ –±–æ–ª–µ–µ 5 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö, –≥–ª—É–±–æ–∫–æ –ø–æ–≥—Ä—É–∂–∞–µ–º—Å—è –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –≤ —Ä–µ–∫–ª–∞–º—É , –æ–±—É—á–∞–µ–º –Ω–æ–≤–∏—á–∫–æ–≤, –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤.\n\n‚úÖ –ó–∞ –ø–ª–µ—á–∞–º–∏:\n\n‚Äî 4 –ø–æ—Ç–æ–∫–∞ —É—á–µ–Ω–∏–∫–æ–≤\n‚Äî —Å–æ—Ç–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π\n‚Äî –¥–µ—Å—è—Ç–∫–∏ —Å–∏–ª—å–Ω—ã—Ö –∫–µ–π—Å–æ–≤ (https://t.me/wbclubotzivi)\n\n<b>üìå –ó–∞—á–µ–º —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª?</b>\n\n–ß—Ç–æ–±—ã —Ç—ã –±–æ–ª—å—à–µ –Ω–µ –ø–æ–∫—É–ø–∞–ª(–∞) ¬´–≤–æ–¥—É¬ª –ø–æ–¥ –≤–∏–¥–æ–º –æ–±—É—á–µ–Ω–∏—è.\n–ó–¥–µ—Å—å ‚Äî –º–∞–∫—Å–∏–º—É–º –ø–æ–ª—å–∑—ã:\n\n‚úÖ –¢–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n‚úÖ –¢–æ–ª—å–∫–æ –ø—Ä–∞–∫—Ç–∏–∫–∞\n‚úÖ –¢–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å\n\nüîê –ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç—ã–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤–æ–∏—Ö.\nüëá –ñ–º–∏ —Å—Ç–∞—Ä—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ —Å–∏–ª—å–Ω—ã—Ö!",
    {
      reply_markup: new InlineKeyboard().text("‚ú® –°—Ç–∞—Ä—Ç", "step:video"),
      parse_mode: "HTML",
    }
  );
  const { callbackQuery } = await conversation.waitFor([
    "message",
    "callback_query",
  ]);
  if (callbackQuery?.data === "step:video") {
    await video(conversation, ctx);
  }
};

const video = async (conversation: Conversation, ctx: Context) => {
  await ctx.replyWithVideo(
    "BAACAgIAAxkBAAMkaI409NfKm8Kn-S0i-IJuK3tYqdEAArh-AAJGMXFI4zid0un5t7w2BA",
    {
      reply_markup: new InlineKeyboard()
        .text("üõí –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É", "step:buy")
        .row()
        .text("üîë –£ –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", "step:promocode")
        .row()
        .url("‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å", "https://t.me/WB_Elvira_Albina"),
      caption:
        "üîí–ó–ê–ö–†–´–¢–´–ô –ö–ê–ù–ê–õ –î–õ–Ø –ü–†–û–î–ê–í–¶–û–í –ù–ê WILDBERRIES\n\n–¢—ã –ø—Ä–æ—Å–∏–ª ‚Äî –∏ –º—ã —Å–¥–µ–ª–∞–ª–∏. –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π —É—Ä–æ–∫ = —Ä–æ—Å—Ç —Ç–≤–æ–µ–≥–æ –æ–±–æ—Ä–æ—Ç–∞.\n\nüéÅ –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –Ω–∞ 30 –¥–Ω–µ–π?\n\n‚úÖ –£—Ä–æ–∫–∏ –ø–æ Mpstats\n‚úÖ –ì–æ—Ç–æ–≤—ã–µ —Å–≤—è–∑–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è\n‚úÖ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –∫–∞—Ä—Ç–æ—á–µ–∫\n‚úÖ –¢–∞–±–ª–∏—Ü—ã, —á–µ–∫-–ª–∏—Å—Ç—ã, —à–ø–∞—Ä–≥–∞–ª–∫–∏\n‚úÖ –í–∏–¥–µ–æ –ø–æ –∑–∞–∫—É–ø–∫–µ –≤ –ö–∏—Ç–∞–µ + –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n‚úÖ –£—Ä–æ–∫–∏ –ø–æ –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–µ\n‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤ (—Ñ–æ—Ç–æ—Å—Ç—É–¥–∏–∏, –±–∞–π–µ—Ä—ã, –¥–∏–∑–∞–π–Ω)\n‚úÖ –ü—Ä—è–º—ã–µ —ç—Ñ–∏—Ä—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n\nüî• –î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ ‚Äî —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –º–∏–Ω–∏-–∫—É—Ä—Å:\n- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ü/–∫–∞–±–∏–Ω–µ—Ç–∞\n- –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ + SEO\n- –ü–æ—Å—Ç–∞–≤–∫–∏ –∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∞\n- –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è\n- –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞\n\n–ù–∞—à–∏ –∫–µ–π—Å—ã –∏ –æ—Ç–∑—ã–≤—ã (—Ç—É—Ç –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞)\n\nüí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ ‚Äî –≤—Å–µ–≥–æ 1990‚ÇΩ/30 –¥–Ω–µ–π\n\n–≠—Ç–æ –º–µ–Ω—å—à–µ, —á–µ–º –±—é–¥–∂–µ—Ç –æ–¥–Ω–æ–π —Ç–≤–æ–µ–π —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏\n\n–¢—ã –ª–∏–±–æ –ø—Ä–æ–±—É–µ—à—å —Å –Ω–∞–º–∏, –ª–∏–±–æ –ø–æ–∫—É–ø–∞–µ—à—å üí¥–æ—á–µ—Ä–µ–¥–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ üìö, –∫–æ—Ç–æ—Ä–æ–µ –æ—Å—Ç–∞–≤–∏—Ç —Ç–µ–±—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏\n\nüîó –ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ",
    }
  );
  const { callbackQuery } = await conversation.waitFor("callback_query");
  if (callbackQuery.data === "step:buy") {
    await buy(conversation, ctx);
  }
  if (callbackQuery.data === "step:promocode") {
    await promocode(conversation, ctx);
  }
};

const buy = async (conversation: Conversation, ctx: Context) => {
  await ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç—ã?");
};

const promocode = async (conversation: Conversation, ctx: Context) => {
  await ctx.reply("üîë –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:", {
    reply_markup: new InlineKeyboard().text("‚óÄÔ∏è –ù–∞–∑–∞–¥", "step:video"),
  });
  const { message, callbackQuery } = await conversation.waitFor([
    "message",
    "callback_query",
  ]);
  if (message && message.text) {
    await ctx.reply(`–ü—Ä–æ–º–æ–∫–æ–¥: ${message.text}`);
  } else if (callbackQuery?.data === "step:video") {
    await video(conversation, ctx);
  }
};
