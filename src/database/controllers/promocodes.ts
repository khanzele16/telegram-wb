import { Context, InlineKeyboard } from "grammy";
import Promocode from "../models/Promocode";
import User from "../models/User";

export const createPromocode = async (ctx: Context) => {
  const promocode = new Promocode({
    code: "test",
    discount: 0.25,
    useNumber: 50,
  });
  await promocode.save();
};

export const getPromocode = async (ctx: Context, userPromocode: string) => {
  try {
    const promocode = await Promocode.findOne({ code: userPromocode });
    const user = await User.findOne({ telegramId: ctx.from?.id });
    
    if (!promocode) {
      await ctx.reply(
        "ü§î –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n–ú–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:",
        { reply_markup: new InlineKeyboard().text("‚óÄÔ∏è –ù–∞–∑–∞–¥", "step:video") }
      );
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥
    const userUsedPromocodes = user?.usedPromocodes.find(
      (promo) => promo.toString() === promocode._id.toString()
    );

    if (userUsedPromocodes) {
      await ctx.reply("ü§î –ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—á–µ—Ä–ø–∞–Ω –ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥
    if (promocode.useNumber <= 0) {
      await ctx.reply("ü§î –ü—Ä–æ–º–æ–∫–æ–¥ –∏—Å—á–µ—Ä–ø–∞–Ω.");
      return;
    }

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (user && promocode._id) {
      user.usedPromocodes.push(promocode._id);
      await user.save();
      
      // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
      promocode.useNumber -= 1;
      await promocode.save();
    }

    await ctx.reply(
      `üéâ –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É –≤ ${Math.round(promocode.discount * 100)}% –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!`
    );
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞:", err);
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
};
